#!/usr/bin/env python3
"""
Script d'installation pour Agent Depp avec requests-html
Installation simple et rapide sans navigateur
"""

import subprocess
import sys
import os
import logging

# Configuration du logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def install_requirements():
    """Installe les d√©pendances Python"""
    try:
        logger.info("üì¶ Installation des d√©pendances Python...")
        result = subprocess.run([
            sys.executable, "-m", "pip", "install", "-r", "requirements.txt"
        ], check=True, capture_output=True, text=True)
        logger.info("‚úÖ D√©pendances Python install√©es")
        return True
    except subprocess.CalledProcessError as e:
        logger.error(f"‚ùå Erreur installation Python: {e}")
        logger.error(f"Sortie d'erreur: {e.stderr}")
        return False

def test_imports():
    """Test des imports principaux"""
    try:
        logger.info("üß™ Test des imports...")
        
        # Test requests-html
        try:
            from requests_html import HTMLSession
            logger.info("‚úÖ requests-html OK")
        except ImportError:
            logger.warning("‚ö†Ô∏è requests-html non disponible, utilisation de requests")
        
        # Test BeautifulSoup
        from bs4 import BeautifulSoup
        logger.info("‚úÖ BeautifulSoup OK")
        
        # Test Streamlit
        import streamlit
        logger.info("‚úÖ Streamlit OK")
        
        # Test autres d√©pendances
        import requests
        import pandas
        logger.info("‚úÖ Toutes les d√©pendances OK")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Test imports √©chou√©: {e}")
        return False

def test_search():
    """Test rapide de recherche"""
    try:
        logger.info("üîç Test de recherche...")
        
        # Import du module de recherche
        sys.path.append(os.path.join(os.path.dirname(__file__), 'agent'))
        from html_search import search_with_html
        
        # Test simple
        results = search_with_html("test", max_results=1, engine="google")
        
        if results:
            logger.info(f"‚úÖ Test recherche r√©ussi: {len(results)} r√©sultat(s)")
        else:
            logger.warning("‚ö†Ô∏è Test recherche: aucun r√©sultat (normal si bloqu√©)")
        
        return True
        
    except Exception as e:
        logger.error(f"‚ùå Test recherche √©chou√©: {e}")
        return False

def main():
    """Installation compl√®te"""
    logger.info("üöÄ D√©but de l'installation de Agent Depp avec HTML Search")
    
    # √âtape 1: D√©pendances Python
    if not install_requirements():
        logger.error("‚ùå √âchec de l'installation des d√©pendances Python")
        return False
    
    # √âtape 2: Test des imports
    if not test_imports():
        logger.error("‚ùå √âchec du test des imports")
        return False
    
    # √âtape 3: Test de recherche
    if not test_search():
        logger.warning("‚ö†Ô∏è Test recherche √©chou√©, mais l'installation peut fonctionner")
    
    logger.info("üéâ Installation termin√©e avec succ√®s!")
    logger.info("üí° Vous pouvez maintenant lancer l'agent avec: python run_agent.py")
    logger.info("üîß Moteurs disponibles: Google, Bing, DuckDuckGo, Startpage (HTML)")
    
    return True

if __name__ == "__main__":
    success = main()
    if not success:
        sys.exit(1) 